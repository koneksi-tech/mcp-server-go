
name: Build

on:
  push:
    branches: [ main, master ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

permissions:
  contents: write
  packages: write

jobs:
  build:
    name: Build - ${{ matrix.platform.os_name }}
    runs-on: ${{ matrix.platform.os }}
    strategy:
      matrix:
        platform:
          - os_name: Linux-x86_64
            os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            binary_name: koneksi-mcp-server
          - os_name: Linux-aarch64
            os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            binary_name: koneksi-mcp-server
          - os_name: Windows-x86_64
            os: windows-latest
            target: x86_64-pc-windows-msvc
            binary_name: koneksi-mcp-server.exe
          - os_name: macOS-x86_64
            os: macos-latest
            target: x86_64-apple-darwin
            binary_name: koneksi-mcp-server
          - os_name: macOS-aarch64
            os: macos-latest
            target: aarch64-apple-darwin
            binary_name: koneksi-mcp-server
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.22'
    
    - name: Run tests with coverage
      if: matrix.platform.os_name == 'Linux-x86_64'
      run: |
        go test -v -race -coverprofile=coverage.out ./...
        go tool cover -html=coverage.out -o coverage.html
      
    - name: Upload coverage reports
      if: matrix.platform.os_name == 'Linux-x86_64'
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: |
          coverage.out
          coverage.html
        retention-days: 7
    
    - name: Build
      run: |
        if [ "${{ matrix.platform.os_name }}" == "Linux-aarch64" ]; then
          export GOOS=linux
          export GOARCH=arm64
        elif [ "${{ matrix.platform.os_name }}" == "macOS-aarch64" ]; then
          export GOOS=darwin
          export GOARCH=arm64
        elif [ "${{ matrix.platform.os_name }}" == "macOS-x86_64" ]; then
          export GOOS=darwin
          export GOARCH=amd64
        elif [ "${{ matrix.platform.os_name }}" == "Windows-x86_64" ]; then
          export GOOS=windows
          export GOARCH=amd64
        else
          export GOOS=linux
          export GOARCH=amd64
        fi
        go build -o ${{ matrix.platform.binary_name }} ./cmd/koneksi-mcp-server
      shell: bash
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: koneksi-mcp-server-${{ matrix.platform.os_name }}
        path: ${{ matrix.platform.binary_name }}
        retention-days: 7

  release:
    name: Release
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts
    
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: artifacts/**/*
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}